# version: '3'
services:
  # frontend:
  #   build:
  #     context: ./
  #     dockerfile: ./frontend/Dockerfile
  #   ports:
  #     - "8080:80"
  #   volumes:
  #     - ./frontend/src:/usr/share/nginx/html

  # orchestrator_v2:
  #   depends_on:
  #     - fraud_detection
  #     - suggestions_service
  #     - transaction_verification
  #     - order_queue
  #   build:
  #     context: ./orchestrator_v2
  #   ports:
  #     - name: REST
  #       target: 8081
  #       published: 8081
  #   environment:
  #     fraud_dns: "fraud_detection:50051"
  #     transaction_verification_dns: "transaction_verification:50052"
  #     suggestions_dns: "suggestions_service:50053"
  #     order_queue_dns: "order_queue:50054"

  # suggestions_service:
  #   build:
  #     context: ./suggestions
  #   ports:
  #     - name: gRPC
  #       target: 50053
  #       published: 50053
  #   environment:
  #     port_to_listening: 50053
  #     gemini_api_key: ${GEMINI_API_KEY}

  # fraud_detection:
  #   build:
  #     context: ./
  #     dockerfile: ./fraud_detection/Dockerfile
  #   ports:
  #     - 50051:50051
  #   environment:
  #     - PYTHONUNBUFFERED=TRUE
  #     - PYTHONFILE=/app/fraud_detection/src/app.py
  #   volumes:
  #     - ./utils:/app/utils
  #     - ./fraud_detection/src:/app/fraud_detection/src
  # transaction_verification:
  #   build:
  #     context: ./
  #     dockerfile: ./transaction_verification/Dockerfile
  #   ports:
  #     - 50052:50052
  #   environment:
  #     - PYTHONUNBUFFERED=TRUE
  #     - PYTHONFILE=/app/transaction_verification/src/app.py
  #   volumes:
  #     - ./utils:/app/utils
  #     - ./transaction_verification/src:/app/transaction_verification/src
  #   env_file:
  #     - .env
  order_queue:
    build:
      context: ./
      dockerfile: ./order_queue/Dockerfile
    ports:
      - 50054:50054
    environment:
      - PYTHONUNBUFFERED=TRUE
      - PYTHONFILE=/app/order_queue/src/app.py
    volumes:
      - ./utils:/app/utils
      - ./order_queue/src:/app/order_queue/src
    env_file:
      - .env

  payment_service:
    build:
      context: ./payment_service
    ports:
      - 50055:50055
    environment:
      PORT: 50055
  
  # order_service_1:
  #   depends_on:
  #     - order_queue
  #   build:
  #     context: ./order_service
  #   ports:
  #     - 50501:50501
  #     - name: gRPC
  #       target: 50501
  #       published: 50501
  #   environment:
  #     PORT: 50501
  #     order_queue_dns: "order_queue:50054"
  #     order_service_1_dns: "order_service_2:50502"
  #     order_service_2_dns: "order_service_3:50503"
  
  # order_service_2:
  #   depends_on:
  #     - order_queue
  #   build:
  #     context: ./order_service
  #   ports:
  #     # - 50502:50502
  #     - name: gRPC
  #       target: 50502
  #       published: 50502
  #   environment:
  #     PORT: 50502
  #     order_queue_dns: "order_queue:50054"
  #     order_service_1_dns: "order_service_1:50501"
  #     order_service_2_dns: "order_service_3:50503"

  # order_service_3:
  #   depends_on:
  #     - order_queue
  #   build:
  #     context: ./order_service
  #   ports:
  #     - name: gRPC
  #       target: 50503
  #       published: 50503
  #   environment:
  #     PORT: 50503
  #     order_queue_dns: "order_queue:50054"
  #     order_service_1_dns: "order_service_1:50501"
  #     order_service_2_dns: "order_service_2:50502"

  db_replica1:
    build:
      context: ./
      dockerfile: ./database/Dockerfile
    container_name: db_replica1
    ports:
      - 50061:50061
    environment:
      - PYTHONUNBUFFERED=TRUE
      - PYTHONFILE=/app/database/src/app.py
      - RANK=1
    volumes:
      - ./utils:/app/utils
      - ./database/src:/app/database/src
    networks:
      - db_network

  db_replica2:
    build:
      context: ./
      dockerfile: ./database/Dockerfile
    container_name: db_replica2
    ports:
      - 50062:50062
    environment:
      - PYTHONUNBUFFERED=TRUE
      - PYTHONFILE=/app/database/src/app.py
      - RANK=2
    volumes:
      - ./utils:/app/utils
      - ./database/src:/app/database/src
    networks:
      - db_network

  db_replica3:
    build:
      context: ./
      dockerfile: ./database/Dockerfile
    container_name: db_replica3
    ports:
      - 50063:50063
    environment:
      - PYTHONUNBUFFERED=TRUE
      - PYTHONFILE=/app/database/src/app.py
      - RANK=3
    volumes:
      - ./utils:/app/utils
      - ./database/src:/app/database/src
    networks:
      - db_network

networks:
  services:
  db_network:
    driver: bridge
