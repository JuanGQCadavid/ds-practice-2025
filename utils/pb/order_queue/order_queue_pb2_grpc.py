# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from common import common_pb2 as common_dot_common__pb2


class OrderQueueServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.init = channel.unary_unary(
                '/queue.OrderQueueService/init',
                request_serializer=common_dot_common__pb2.InitRequest.SerializeToString,
                response_deserializer=common_dot_common__pb2.InitResponse.FromString,
                )
        self.enqueue = channel.unary_unary(
                '/queue.OrderQueueService/enqueue',
                request_serializer=common_dot_common__pb2.NextRequest.SerializeToString,
                response_deserializer=common_dot_common__pb2.NextResponse.FromString,
                )
        self.dequeue = channel.unary_unary(
                '/queue.OrderQueueService/dequeue',
                request_serializer=common_dot_common__pb2.NextRequest.SerializeToString,
                response_deserializer=common_dot_common__pb2.NextResponse.FromString,
                )
        self.clean = channel.unary_unary(
                '/queue.OrderQueueService/clean',
                request_serializer=common_dot_common__pb2.NextRequest.SerializeToString,
                response_deserializer=common_dot_common__pb2.NextResponse.FromString,
                )


class OrderQueueServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def init(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def enqueue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def dequeue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def clean(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OrderQueueServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'init': grpc.unary_unary_rpc_method_handler(
                    servicer.init,
                    request_deserializer=common_dot_common__pb2.InitRequest.FromString,
                    response_serializer=common_dot_common__pb2.InitResponse.SerializeToString,
            ),
            'enqueue': grpc.unary_unary_rpc_method_handler(
                    servicer.enqueue,
                    request_deserializer=common_dot_common__pb2.NextRequest.FromString,
                    response_serializer=common_dot_common__pb2.NextResponse.SerializeToString,
            ),
            'dequeue': grpc.unary_unary_rpc_method_handler(
                    servicer.dequeue,
                    request_deserializer=common_dot_common__pb2.NextRequest.FromString,
                    response_serializer=common_dot_common__pb2.NextResponse.SerializeToString,
            ),
            'clean': grpc.unary_unary_rpc_method_handler(
                    servicer.clean,
                    request_deserializer=common_dot_common__pb2.NextRequest.FromString,
                    response_serializer=common_dot_common__pb2.NextResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'queue.OrderQueueService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OrderQueueService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def init(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/queue.OrderQueueService/init',
            common_dot_common__pb2.InitRequest.SerializeToString,
            common_dot_common__pb2.InitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def enqueue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/queue.OrderQueueService/enqueue',
            common_dot_common__pb2.NextRequest.SerializeToString,
            common_dot_common__pb2.NextResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def dequeue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/queue.OrderQueueService/dequeue',
            common_dot_common__pb2.NextRequest.SerializeToString,
            common_dot_common__pb2.NextResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def clean(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/queue.OrderQueueService/clean',
            common_dot_common__pb2.NextRequest.SerializeToString,
            common_dot_common__pb2.NextResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
