# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from transaction_verification import transaction_verification_pb2 as transaction__verification_dot_transaction__verification__pb2


class TransactionVerificationServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.initOrder = channel.unary_unary(
                '/transaction.TransactionVerificationService/initOrder',
                request_serializer=transaction__verification_dot_transaction__verification__pb2.TransactionVerificationRequestInit.SerializeToString,
                response_deserializer=transaction__verification_dot_transaction__verification__pb2.TransactionVerificationResponse.FromString,
                )
        self.checkOrder = channel.unary_unary(
                '/transaction.TransactionVerificationService/checkOrder',
                request_serializer=transaction__verification_dot_transaction__verification__pb2.TransactionVerificationRequestClock.SerializeToString,
                response_deserializer=transaction__verification_dot_transaction__verification__pb2.TransactionVerificationResponseClock.FromString,
                )
        self.checkUser = channel.unary_unary(
                '/transaction.TransactionVerificationService/checkUser',
                request_serializer=transaction__verification_dot_transaction__verification__pb2.TransactionVerificationRequestClock.SerializeToString,
                response_deserializer=transaction__verification_dot_transaction__verification__pb2.TransactionVerificationResponseClock.FromString,
                )
        self.checkFormatCreditCard = channel.unary_unary(
                '/transaction.TransactionVerificationService/checkFormatCreditCard',
                request_serializer=transaction__verification_dot_transaction__verification__pb2.TransactionVerificationRequestClock.SerializeToString,
                response_deserializer=transaction__verification_dot_transaction__verification__pb2.TransactionVerificationResponseClock.FromString,
                )


class TransactionVerificationServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def initOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def checkOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def checkUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def checkFormatCreditCard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TransactionVerificationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'initOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.initOrder,
                    request_deserializer=transaction__verification_dot_transaction__verification__pb2.TransactionVerificationRequestInit.FromString,
                    response_serializer=transaction__verification_dot_transaction__verification__pb2.TransactionVerificationResponse.SerializeToString,
            ),
            'checkOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.checkOrder,
                    request_deserializer=transaction__verification_dot_transaction__verification__pb2.TransactionVerificationRequestClock.FromString,
                    response_serializer=transaction__verification_dot_transaction__verification__pb2.TransactionVerificationResponseClock.SerializeToString,
            ),
            'checkUser': grpc.unary_unary_rpc_method_handler(
                    servicer.checkUser,
                    request_deserializer=transaction__verification_dot_transaction__verification__pb2.TransactionVerificationRequestClock.FromString,
                    response_serializer=transaction__verification_dot_transaction__verification__pb2.TransactionVerificationResponseClock.SerializeToString,
            ),
            'checkFormatCreditCard': grpc.unary_unary_rpc_method_handler(
                    servicer.checkFormatCreditCard,
                    request_deserializer=transaction__verification_dot_transaction__verification__pb2.TransactionVerificationRequestClock.FromString,
                    response_serializer=transaction__verification_dot_transaction__verification__pb2.TransactionVerificationResponseClock.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'transaction.TransactionVerificationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TransactionVerificationService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def initOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/transaction.TransactionVerificationService/initOrder',
            transaction__verification_dot_transaction__verification__pb2.TransactionVerificationRequestInit.SerializeToString,
            transaction__verification_dot_transaction__verification__pb2.TransactionVerificationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def checkOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/transaction.TransactionVerificationService/checkOrder',
            transaction__verification_dot_transaction__verification__pb2.TransactionVerificationRequestClock.SerializeToString,
            transaction__verification_dot_transaction__verification__pb2.TransactionVerificationResponseClock.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def checkUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/transaction.TransactionVerificationService/checkUser',
            transaction__verification_dot_transaction__verification__pb2.TransactionVerificationRequestClock.SerializeToString,
            transaction__verification_dot_transaction__verification__pb2.TransactionVerificationResponseClock.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def checkFormatCreditCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/transaction.TransactionVerificationService/checkFormatCreditCard',
            transaction__verification_dot_transaction__verification__pb2.TransactionVerificationRequestClock.SerializeToString,
            transaction__verification_dot_transaction__verification__pb2.TransactionVerificationResponseClock.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
