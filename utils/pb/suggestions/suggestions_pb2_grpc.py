# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from common import common_pb2 as common_dot_common__pb2
from suggestions import suggestions_pb2 as suggestions_dot_suggestions__pb2


class BookSuggestionsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.initOrder = channel.unary_unary(
                '/transaction.BookSuggestionsService/initOrder',
                request_serializer=common_dot_common__pb2.InitRequest.SerializeToString,
                response_deserializer=common_dot_common__pb2.InitResponse.FromString,
                )
        self.suggestBooks = channel.unary_unary(
                '/transaction.BookSuggestionsService/suggestBooks',
                request_serializer=common_dot_common__pb2.NextRequest.SerializeToString,
                response_deserializer=suggestions_dot_suggestions__pb2.BookSuggest.FromString,
                )
        self.cleanOrder = channel.unary_unary(
                '/transaction.BookSuggestionsService/cleanOrder',
                request_serializer=common_dot_common__pb2.NextRequest.SerializeToString,
                response_deserializer=common_dot_common__pb2.NextResponse.FromString,
                )


class BookSuggestionsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def initOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def suggestBooks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def cleanOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BookSuggestionsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'initOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.initOrder,
                    request_deserializer=common_dot_common__pb2.InitRequest.FromString,
                    response_serializer=common_dot_common__pb2.InitResponse.SerializeToString,
            ),
            'suggestBooks': grpc.unary_unary_rpc_method_handler(
                    servicer.suggestBooks,
                    request_deserializer=common_dot_common__pb2.NextRequest.FromString,
                    response_serializer=suggestions_dot_suggestions__pb2.BookSuggest.SerializeToString,
            ),
            'cleanOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.cleanOrder,
                    request_deserializer=common_dot_common__pb2.NextRequest.FromString,
                    response_serializer=common_dot_common__pb2.NextResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'transaction.BookSuggestionsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BookSuggestionsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def initOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/transaction.BookSuggestionsService/initOrder',
            common_dot_common__pb2.InitRequest.SerializeToString,
            common_dot_common__pb2.InitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def suggestBooks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/transaction.BookSuggestionsService/suggestBooks',
            common_dot_common__pb2.NextRequest.SerializeToString,
            suggestions_dot_suggestions__pb2.BookSuggest.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def cleanOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/transaction.BookSuggestionsService/cleanOrder',
            common_dot_common__pb2.NextRequest.SerializeToString,
            common_dot_common__pb2.NextResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
