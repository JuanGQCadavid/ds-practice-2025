// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: replica/replica.proto

package replica

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            int64                  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IDRequest) Reset() {
	*x = IDRequest{}
	mi := &file_replica_replica_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDRequest) ProtoMessage() {}

func (x *IDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_replica_replica_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDRequest.ProtoReflect.Descriptor instead.
func (*IDRequest) Descriptor() ([]byte, []int) {
	return file_replica_replica_proto_rawDescGZIP(), []int{0}
}

func (x *IDRequest) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type IDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsValid       bool                   `protobuf:"varint,1,opt,name=isValid,proto3" json:"isValid,omitempty"`
	KnownIDs      []int64                `protobuf:"varint,2,rep,packed,name=knownIDs,proto3" json:"knownIDs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IDResponse) Reset() {
	*x = IDResponse{}
	mi := &file_replica_replica_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDResponse) ProtoMessage() {}

func (x *IDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_replica_replica_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDResponse.ProtoReflect.Descriptor instead.
func (*IDResponse) Descriptor() ([]byte, []int) {
	return file_replica_replica_proto_rawDescGZIP(), []int{1}
}

func (x *IDResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *IDResponse) GetKnownIDs() []int64 {
	if x != nil {
		return x.KnownIDs
	}
	return nil
}

type LeaderNotification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LeaderID      int64                  `protobuf:"varint,1,opt,name=leaderID,proto3" json:"leaderID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaderNotification) Reset() {
	*x = LeaderNotification{}
	mi := &file_replica_replica_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaderNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderNotification) ProtoMessage() {}

func (x *LeaderNotification) ProtoReflect() protoreflect.Message {
	mi := &file_replica_replica_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderNotification.ProtoReflect.Descriptor instead.
func (*LeaderNotification) Descriptor() ([]byte, []int) {
	return file_replica_replica_proto_rawDescGZIP(), []int{2}
}

func (x *LeaderNotification) GetLeaderID() int64 {
	if x != nil {
		return x.LeaderID
	}
	return 0
}

type LeaderTransfer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OldLeaderID   int64                  `protobuf:"varint,1,opt,name=oldLeaderID,proto3" json:"oldLeaderID,omitempty"`
	NewLeaderID   int64                  `protobuf:"varint,2,opt,name=newLeaderID,proto3" json:"newLeaderID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaderTransfer) Reset() {
	*x = LeaderTransfer{}
	mi := &file_replica_replica_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaderTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderTransfer) ProtoMessage() {}

func (x *LeaderTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_replica_replica_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderTransfer.ProtoReflect.Descriptor instead.
func (*LeaderTransfer) Descriptor() ([]byte, []int) {
	return file_replica_replica_proto_rawDescGZIP(), []int{3}
}

func (x *LeaderTransfer) GetOldLeaderID() int64 {
	if x != nil {
		return x.OldLeaderID
	}
	return 0
}

func (x *LeaderTransfer) GetNewLeaderID() int64 {
	if x != nil {
		return x.NewLeaderID
	}
	return 0
}

type HeartbeatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LeaderID      int64                  `protobuf:"varint,1,opt,name=leaderID,proto3" json:"leaderID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_replica_replica_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_replica_replica_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_replica_replica_proto_rawDescGZIP(), []int{4}
}

func (x *HeartbeatRequest) GetLeaderID() int64 {
	if x != nil {
		return x.LeaderID
	}
	return 0
}

type HeartbeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplicaID     int64                  `protobuf:"varint,1,opt,name=replicaID,proto3" json:"replicaID,omitempty"`
	IsAlive       bool                   `protobuf:"varint,2,opt,name=isAlive,proto3" json:"isAlive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_replica_replica_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_replica_replica_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_replica_replica_proto_rawDescGZIP(), []int{5}
}

func (x *HeartbeatResponse) GetReplicaID() int64 {
	if x != nil {
		return x.ReplicaID
	}
	return 0
}

func (x *HeartbeatResponse) GetIsAlive() bool {
	if x != nil {
		return x.IsAlive
	}
	return false
}

type StatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	mi := &file_replica_replica_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_replica_replica_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_replica_replica_proto_rawDescGZIP(), []int{6}
}

type StatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplicaID     int32                  `protobuf:"varint,1,opt,name=replicaID,proto3" json:"replicaID,omitempty"`
	IsLeader      bool                   `protobuf:"varint,2,opt,name=isLeader,proto3" json:"isLeader,omitempty"`
	Leader        int32                  `protobuf:"varint,3,opt,name=leader,proto3" json:"leader,omitempty"`
	LastAccess    string                 `protobuf:"bytes,4,opt,name=lastAccess,proto3" json:"lastAccess,omitempty"`
	KnownReplicas []int32                `protobuf:"varint,5,rep,packed,name=knownReplicas,proto3" json:"knownReplicas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	mi := &file_replica_replica_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_replica_replica_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_replica_replica_proto_rawDescGZIP(), []int{7}
}

func (x *StatusResponse) GetReplicaID() int32 {
	if x != nil {
		return x.ReplicaID
	}
	return 0
}

func (x *StatusResponse) GetIsLeader() bool {
	if x != nil {
		return x.IsLeader
	}
	return false
}

func (x *StatusResponse) GetLeader() int32 {
	if x != nil {
		return x.Leader
	}
	return 0
}

func (x *StatusResponse) GetLastAccess() string {
	if x != nil {
		return x.LastAccess
	}
	return ""
}

func (x *StatusResponse) GetKnownReplicas() []int32 {
	if x != nil {
		return x.KnownReplicas
	}
	return nil
}

var File_replica_replica_proto protoreflect.FileDescriptor

var file_replica_replica_proto_rawDesc = string([]byte{
	0x0a, 0x15, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x2f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1b, 0x0a, 0x09, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x49, 0x44, 0x22, 0x42, 0x0a, 0x0a, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x49, 0x44, 0x73, 0x22, 0x30, 0x0a, 0x12, 0x4c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x22, 0x54, 0x0a, 0x0e, 0x4c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b,
	0x6f, 0x6c, 0x64, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x6f, 0x6c, 0x64, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20,
	0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x22, 0x2e, 0x0a, 0x10, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x22, 0x4b, 0x0a, 0x11, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x22, 0x0f, 0x0a,
	0x0d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa8,
	0x01, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x32, 0xf4, 0x01, 0x0a, 0x07, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x12, 0x22, 0x0a, 0x07, 0x73, 0x68, 0x61, 0x72, 0x65, 0x49, 0x44,
	0x12, 0x0a, 0x2e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x0f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x4e, 0x65, 0x77, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x13, 0x2e, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x0b, 0x2e, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c,
	0x0a, 0x0c, 0x62, 0x65, 0x63, 0x6f, 0x6d, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x0f,
	0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x1a,
	0x0b, 0x2e, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x09,
	0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x11, 0x2e, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x48,
	0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x09, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4a,
	0x75, 0x61, 0x6e, 0x47, 0x51, 0x43, 0x61, 0x64, 0x61, 0x76, 0x69, 0x64, 0x2f, 0x64, 0x73, 0x2d,
	0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x2d, 0x32, 0x30, 0x32, 0x35, 0x2f, 0x75, 0x74,
	0x69, 0x6c, 0x73, 0x2f, 0x70, 0x62, 0x2f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_replica_replica_proto_rawDescOnce sync.Once
	file_replica_replica_proto_rawDescData []byte
)

func file_replica_replica_proto_rawDescGZIP() []byte {
	file_replica_replica_proto_rawDescOnce.Do(func() {
		file_replica_replica_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_replica_replica_proto_rawDesc), len(file_replica_replica_proto_rawDesc)))
	})
	return file_replica_replica_proto_rawDescData
}

var file_replica_replica_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_replica_replica_proto_goTypes = []any{
	(*IDRequest)(nil),          // 0: IDRequest
	(*IDResponse)(nil),         // 1: IDResponse
	(*LeaderNotification)(nil), // 2: LeaderNotification
	(*LeaderTransfer)(nil),     // 3: LeaderTransfer
	(*HeartbeatRequest)(nil),   // 4: HeartbeatRequest
	(*HeartbeatResponse)(nil),  // 5: HeartbeatResponse
	(*StatusRequest)(nil),      // 6: StatusRequest
	(*StatusResponse)(nil),     // 7: StatusResponse
}
var file_replica_replica_proto_depIdxs = []int32{
	0, // 0: Replica.shareID:input_type -> IDRequest
	2, // 1: Replica.notifyNewLeader:input_type -> LeaderNotification
	3, // 2: Replica.becomeLeader:input_type -> LeaderTransfer
	4, // 3: Replica.heartbeat:input_type -> HeartbeatRequest
	6, // 4: Replica.getStatus:input_type -> StatusRequest
	1, // 5: Replica.shareID:output_type -> IDResponse
	1, // 6: Replica.notifyNewLeader:output_type -> IDResponse
	1, // 7: Replica.becomeLeader:output_type -> IDResponse
	5, // 8: Replica.heartbeat:output_type -> HeartbeatResponse
	7, // 9: Replica.getStatus:output_type -> StatusResponse
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_replica_replica_proto_init() }
func file_replica_replica_proto_init() {
	if File_replica_replica_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_replica_replica_proto_rawDesc), len(file_replica_replica_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_replica_replica_proto_goTypes,
		DependencyIndexes: file_replica_replica_proto_depIdxs,
		MessageInfos:      file_replica_replica_proto_msgTypes,
	}.Build()
	File_replica_replica_proto = out.File
	file_replica_replica_proto_goTypes = nil
	file_replica_replica_proto_depIdxs = nil
}
