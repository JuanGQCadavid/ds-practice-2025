// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.21.12
// source: utils/pb/fraud_detection/fraud_detection.proto

package fraud_detection

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Contact       string                 `protobuf:"bytes,2,opt,name=contact,proto3" json:"contact,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_utils_pb_fraud_detection_fraud_detection_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_utils_pb_fraud_detection_fraud_detection_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_utils_pb_fraud_detection_fraud_detection_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

type CreditCard struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Number         string                 `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	ExpirationDate string                 `protobuf:"bytes,2,opt,name=expirationDate,proto3" json:"expirationDate,omitempty"`
	Cvv            string                 `protobuf:"bytes,3,opt,name=cvv,proto3" json:"cvv,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreditCard) Reset() {
	*x = CreditCard{}
	mi := &file_utils_pb_fraud_detection_fraud_detection_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditCard) ProtoMessage() {}

func (x *CreditCard) ProtoReflect() protoreflect.Message {
	mi := &file_utils_pb_fraud_detection_fraud_detection_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditCard.ProtoReflect.Descriptor instead.
func (*CreditCard) Descriptor() ([]byte, []int) {
	return file_utils_pb_fraud_detection_fraud_detection_proto_rawDescGZIP(), []int{1}
}

func (x *CreditCard) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *CreditCard) GetExpirationDate() string {
	if x != nil {
		return x.ExpirationDate
	}
	return ""
}

func (x *CreditCard) GetCvv() string {
	if x != nil {
		return x.Cvv
	}
	return ""
}

type Item struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Quantity      int32                  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Item) Reset() {
	*x = Item{}
	mi := &file_utils_pb_fraud_detection_fraud_detection_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_utils_pb_fraud_detection_fraud_detection_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_utils_pb_fraud_detection_fraud_detection_proto_rawDescGZIP(), []int{2}
}

func (x *Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Item) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type Address struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Street        string                 `protobuf:"bytes,1,opt,name=street,proto3" json:"street,omitempty"`
	City          string                 `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	State         string                 `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	Zip           string                 `protobuf:"bytes,4,opt,name=zip,proto3" json:"zip,omitempty"`
	Country       string                 `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Address) Reset() {
	*x = Address{}
	mi := &file_utils_pb_fraud_detection_fraud_detection_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_utils_pb_fraud_detection_fraud_detection_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_utils_pb_fraud_detection_fraud_detection_proto_rawDescGZIP(), []int{3}
}

func (x *Address) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Address) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Address) GetZip() string {
	if x != nil {
		return x.Zip
	}
	return ""
}

func (x *Address) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type Device struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Model         string                 `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	Os            string                 `protobuf:"bytes,3,opt,name=os,proto3" json:"os,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Device) Reset() {
	*x = Device{}
	mi := &file_utils_pb_fraud_detection_fraud_detection_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_utils_pb_fraud_detection_fraud_detection_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_utils_pb_fraud_detection_fraud_detection_proto_rawDescGZIP(), []int{4}
}

func (x *Device) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Device) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Device) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

type Browser struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Browser) Reset() {
	*x = Browser{}
	mi := &file_utils_pb_fraud_detection_fraud_detection_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Browser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Browser) ProtoMessage() {}

func (x *Browser) ProtoReflect() protoreflect.Message {
	mi := &file_utils_pb_fraud_detection_fraud_detection_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Browser.ProtoReflect.Descriptor instead.
func (*Browser) Descriptor() ([]byte, []int) {
	return file_utils_pb_fraud_detection_fraud_detection_proto_rawDescGZIP(), []int{5}
}

func (x *Browser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Browser) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type Order struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	User                    *User                  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	CreditCard              *CreditCard            `protobuf:"bytes,2,opt,name=creditCard,proto3" json:"creditCard,omitempty"`
	UserComment             string                 `protobuf:"bytes,3,opt,name=userComment,proto3" json:"userComment,omitempty"`
	Items                   []*Item                `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
	DiscountCode            string                 `protobuf:"bytes,5,opt,name=discountCode,proto3" json:"discountCode,omitempty"`
	ShippingMethod          string                 `protobuf:"bytes,6,opt,name=shippingMethod,proto3" json:"shippingMethod,omitempty"`
	GiftMessage             string                 `protobuf:"bytes,7,opt,name=giftMessage,proto3" json:"giftMessage,omitempty"`
	BillingAddress          *Address               `protobuf:"bytes,8,opt,name=billingAddress,proto3" json:"billingAddress,omitempty"`
	GiftWrapping            bool                   `protobuf:"varint,9,opt,name=giftWrapping,proto3" json:"giftWrapping,omitempty"`
	TermsAccepted           bool                   `protobuf:"varint,10,opt,name=termsAccepted,proto3" json:"termsAccepted,omitempty"`
	NotificationPreferences []string               `protobuf:"bytes,11,rep,name=notificationPreferences,proto3" json:"notificationPreferences,omitempty"`
	Device                  *Device                `protobuf:"bytes,12,opt,name=device,proto3" json:"device,omitempty"`
	Browser                 *Browser               `protobuf:"bytes,13,opt,name=browser,proto3" json:"browser,omitempty"`
	AppVersion              string                 `protobuf:"bytes,14,opt,name=appVersion,proto3" json:"appVersion,omitempty"`
	ScreenResolution        string                 `protobuf:"bytes,15,opt,name=screenResolution,proto3" json:"screenResolution,omitempty"`
	Referrer                string                 `protobuf:"bytes,16,opt,name=referrer,proto3" json:"referrer,omitempty"`
	DeviceLanguage          string                 `protobuf:"bytes,17,opt,name=deviceLanguage,proto3" json:"deviceLanguage,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Order) Reset() {
	*x = Order{}
	mi := &file_utils_pb_fraud_detection_fraud_detection_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_utils_pb_fraud_detection_fraud_detection_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_utils_pb_fraud_detection_fraud_detection_proto_rawDescGZIP(), []int{6}
}

func (x *Order) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Order) GetCreditCard() *CreditCard {
	if x != nil {
		return x.CreditCard
	}
	return nil
}

func (x *Order) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *Order) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Order) GetDiscountCode() string {
	if x != nil {
		return x.DiscountCode
	}
	return ""
}

func (x *Order) GetShippingMethod() string {
	if x != nil {
		return x.ShippingMethod
	}
	return ""
}

func (x *Order) GetGiftMessage() string {
	if x != nil {
		return x.GiftMessage
	}
	return ""
}

func (x *Order) GetBillingAddress() *Address {
	if x != nil {
		return x.BillingAddress
	}
	return nil
}

func (x *Order) GetGiftWrapping() bool {
	if x != nil {
		return x.GiftWrapping
	}
	return false
}

func (x *Order) GetTermsAccepted() bool {
	if x != nil {
		return x.TermsAccepted
	}
	return false
}

func (x *Order) GetNotificationPreferences() []string {
	if x != nil {
		return x.NotificationPreferences
	}
	return nil
}

func (x *Order) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *Order) GetBrowser() *Browser {
	if x != nil {
		return x.Browser
	}
	return nil
}

func (x *Order) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *Order) GetScreenResolution() string {
	if x != nil {
		return x.ScreenResolution
	}
	return ""
}

func (x *Order) GetReferrer() string {
	if x != nil {
		return x.Referrer
	}
	return ""
}

func (x *Order) GetDeviceLanguage() string {
	if x != nil {
		return x.DeviceLanguage
	}
	return ""
}

type FraudDetectionRequestInit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	Order         *Order                 `protobuf:"bytes,2,opt,name=order,proto3" json:"order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FraudDetectionRequestInit) Reset() {
	*x = FraudDetectionRequestInit{}
	mi := &file_utils_pb_fraud_detection_fraud_detection_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FraudDetectionRequestInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FraudDetectionRequestInit) ProtoMessage() {}

func (x *FraudDetectionRequestInit) ProtoReflect() protoreflect.Message {
	mi := &file_utils_pb_fraud_detection_fraud_detection_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FraudDetectionRequestInit.ProtoReflect.Descriptor instead.
func (*FraudDetectionRequestInit) Descriptor() ([]byte, []int) {
	return file_utils_pb_fraud_detection_fraud_detection_proto_rawDescGZIP(), []int{7}
}

func (x *FraudDetectionRequestInit) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *FraudDetectionRequestInit) GetOrder() *Order {
	if x != nil {
		return x.Order
	}
	return nil
}

type FraudDetectionRequestClock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	Clock         []int32                `protobuf:"varint,2,rep,packed,name=clock,proto3" json:"clock,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FraudDetectionRequestClock) Reset() {
	*x = FraudDetectionRequestClock{}
	mi := &file_utils_pb_fraud_detection_fraud_detection_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FraudDetectionRequestClock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FraudDetectionRequestClock) ProtoMessage() {}

func (x *FraudDetectionRequestClock) ProtoReflect() protoreflect.Message {
	mi := &file_utils_pb_fraud_detection_fraud_detection_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FraudDetectionRequestClock.ProtoReflect.Descriptor instead.
func (*FraudDetectionRequestClock) Descriptor() ([]byte, []int) {
	return file_utils_pb_fraud_detection_fraud_detection_proto_rawDescGZIP(), []int{8}
}

func (x *FraudDetectionRequestClock) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *FraudDetectionRequestClock) GetClock() []int32 {
	if x != nil {
		return x.Clock
	}
	return nil
}

type FraudDetectionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FraudDetectionResponse) Reset() {
	*x = FraudDetectionResponse{}
	mi := &file_utils_pb_fraud_detection_fraud_detection_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FraudDetectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FraudDetectionResponse) ProtoMessage() {}

func (x *FraudDetectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_utils_pb_fraud_detection_fraud_detection_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FraudDetectionResponse.ProtoReflect.Descriptor instead.
func (*FraudDetectionResponse) Descriptor() ([]byte, []int) {
	return file_utils_pb_fraud_detection_fraud_detection_proto_rawDescGZIP(), []int{9}
}

func (x *FraudDetectionResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type FraudDetectionResponseClock struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Response      *FraudDetectionResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Clock         []int32                 `protobuf:"varint,2,rep,packed,name=clock,proto3" json:"clock,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FraudDetectionResponseClock) Reset() {
	*x = FraudDetectionResponseClock{}
	mi := &file_utils_pb_fraud_detection_fraud_detection_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FraudDetectionResponseClock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FraudDetectionResponseClock) ProtoMessage() {}

func (x *FraudDetectionResponseClock) ProtoReflect() protoreflect.Message {
	mi := &file_utils_pb_fraud_detection_fraud_detection_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FraudDetectionResponseClock.ProtoReflect.Descriptor instead.
func (*FraudDetectionResponseClock) Descriptor() ([]byte, []int) {
	return file_utils_pb_fraud_detection_fraud_detection_proto_rawDescGZIP(), []int{10}
}

func (x *FraudDetectionResponseClock) GetResponse() *FraudDetectionResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *FraudDetectionResponseClock) GetClock() []int32 {
	if x != nil {
		return x.Clock
	}
	return nil
}

var File_utils_pb_fraud_detection_fraud_detection_proto protoreflect.FileDescriptor

var file_utils_pb_fraud_detection_fraud_detection_proto_rawDesc = string([]byte{
	0x0a, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f, 0x70, 0x62, 0x2f, 0x66, 0x72, 0x61, 0x75, 0x64,
	0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x66, 0x72, 0x61, 0x75, 0x64,
	0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x05, 0x66, 0x72, 0x61, 0x75, 0x64, 0x22, 0x34, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x22, 0x5e, 0x0a,
	0x0a, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x76, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x76, 0x76, 0x22, 0x36, 0x0a,
	0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x77, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x7a, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x7a, 0x69, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x42,
	0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x6f, 0x73, 0x22, 0x37, 0x0a, 0x07, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xab, 0x05, 0x0a, 0x05,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x66, 0x72, 0x61, 0x75, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x72, 0x61,
	0x75, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x66, 0x72, 0x61,
	0x75, 0x64, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x68, 0x69, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x69,
	0x66, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x67, 0x69, 0x66, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x0e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x66, 0x72, 0x61, 0x75, 0x64, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x0e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x69, 0x66, 0x74, 0x57, 0x72, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x67, 0x69, 0x66, 0x74,
	0x57, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x65, 0x72, 0x6d,
	0x73, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x12, 0x38,
	0x0a, 0x17, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x17, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x66, 0x72, 0x61, 0x75, 0x64,
	0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x28, 0x0a, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x66, 0x72, 0x61, 0x75, 0x64, 0x2e, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72,
	0x52, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x70,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x6c,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65,
	0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65,
	0x72, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x59, 0x0a, 0x19, 0x46, 0x72, 0x61,
	0x75, 0x64, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x66, 0x72, 0x61, 0x75, 0x64, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x22, 0x4c, 0x0a, 0x1a, 0x46, 0x72, 0x61, 0x75, 0x64, 0x44, 0x65, 0x74,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6c, 0x6f,
	0x63, 0x6b, 0x22, 0x2c, 0x0a, 0x16, 0x46, 0x72, 0x61, 0x75, 0x64, 0x44, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x6e, 0x0a, 0x1b, 0x46, 0x72, 0x61, 0x75, 0x64, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x39, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x72, 0x61, 0x75, 0x64, 0x2e, 0x46, 0x72, 0x61, 0x75, 0x64, 0x44,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b,
	0x32, 0x93, 0x02, 0x0a, 0x15, 0x46, 0x72, 0x61, 0x75, 0x64, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x09, 0x69, 0x6e,
	0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x66, 0x72, 0x61, 0x75, 0x64, 0x2e,
	0x46, 0x72, 0x61, 0x75, 0x64, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x1a, 0x1d, 0x2e, 0x66, 0x72, 0x61, 0x75,
	0x64, 0x2e, 0x46, 0x72, 0x61, 0x75, 0x64, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x09, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x55, 0x73, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x66, 0x72, 0x61, 0x75, 0x64, 0x2e, 0x46, 0x72,
	0x61, 0x75, 0x64, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x1a, 0x22, 0x2e, 0x66, 0x72, 0x61, 0x75, 0x64,
	0x2e, 0x46, 0x72, 0x61, 0x75, 0x64, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x58, 0x0a, 0x0f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12,
	0x21, 0x2e, 0x66, 0x72, 0x61, 0x75, 0x64, 0x2e, 0x46, 0x72, 0x61, 0x75, 0x64, 0x44, 0x65, 0x74,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6c, 0x6f,
	0x63, 0x6b, 0x1a, 0x22, 0x2e, 0x66, 0x72, 0x61, 0x75, 0x64, 0x2e, 0x46, 0x72, 0x61, 0x75, 0x64,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4a, 0x75, 0x61, 0x6e, 0x47, 0x51, 0x43, 0x61, 0x64, 0x61, 0x76,
	0x69, 0x64, 0x2f, 0x64, 0x73, 0x2d, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x2d, 0x32,
	0x30, 0x32, 0x35, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f, 0x70, 0x62, 0x2f, 0x66, 0x72, 0x61,
	0x75, 0x64, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_utils_pb_fraud_detection_fraud_detection_proto_rawDescOnce sync.Once
	file_utils_pb_fraud_detection_fraud_detection_proto_rawDescData []byte
)

func file_utils_pb_fraud_detection_fraud_detection_proto_rawDescGZIP() []byte {
	file_utils_pb_fraud_detection_fraud_detection_proto_rawDescOnce.Do(func() {
		file_utils_pb_fraud_detection_fraud_detection_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_utils_pb_fraud_detection_fraud_detection_proto_rawDesc), len(file_utils_pb_fraud_detection_fraud_detection_proto_rawDesc)))
	})
	return file_utils_pb_fraud_detection_fraud_detection_proto_rawDescData
}

var file_utils_pb_fraud_detection_fraud_detection_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_utils_pb_fraud_detection_fraud_detection_proto_goTypes = []any{
	(*User)(nil),                        // 0: fraud.User
	(*CreditCard)(nil),                  // 1: fraud.CreditCard
	(*Item)(nil),                        // 2: fraud.Item
	(*Address)(nil),                     // 3: fraud.Address
	(*Device)(nil),                      // 4: fraud.Device
	(*Browser)(nil),                     // 5: fraud.Browser
	(*Order)(nil),                       // 6: fraud.Order
	(*FraudDetectionRequestInit)(nil),   // 7: fraud.FraudDetectionRequestInit
	(*FraudDetectionRequestClock)(nil),  // 8: fraud.FraudDetectionRequestClock
	(*FraudDetectionResponse)(nil),      // 9: fraud.FraudDetectionResponse
	(*FraudDetectionResponseClock)(nil), // 10: fraud.FraudDetectionResponseClock
}
var file_utils_pb_fraud_detection_fraud_detection_proto_depIdxs = []int32{
	0,  // 0: fraud.Order.user:type_name -> fraud.User
	1,  // 1: fraud.Order.creditCard:type_name -> fraud.CreditCard
	2,  // 2: fraud.Order.items:type_name -> fraud.Item
	3,  // 3: fraud.Order.billingAddress:type_name -> fraud.Address
	4,  // 4: fraud.Order.device:type_name -> fraud.Device
	5,  // 5: fraud.Order.browser:type_name -> fraud.Browser
	6,  // 6: fraud.FraudDetectionRequestInit.order:type_name -> fraud.Order
	9,  // 7: fraud.FraudDetectionResponseClock.response:type_name -> fraud.FraudDetectionResponse
	7,  // 8: fraud.FraudDetectionService.initOrder:input_type -> fraud.FraudDetectionRequestInit
	8,  // 9: fraud.FraudDetectionService.checkUser:input_type -> fraud.FraudDetectionRequestClock
	8,  // 10: fraud.FraudDetectionService.checkCreditCard:input_type -> fraud.FraudDetectionRequestClock
	9,  // 11: fraud.FraudDetectionService.initOrder:output_type -> fraud.FraudDetectionResponse
	10, // 12: fraud.FraudDetectionService.checkUser:output_type -> fraud.FraudDetectionResponseClock
	10, // 13: fraud.FraudDetectionService.checkCreditCard:output_type -> fraud.FraudDetectionResponseClock
	11, // [11:14] is the sub-list for method output_type
	8,  // [8:11] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_utils_pb_fraud_detection_fraud_detection_proto_init() }
func file_utils_pb_fraud_detection_fraud_detection_proto_init() {
	if File_utils_pb_fraud_detection_fraud_detection_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_utils_pb_fraud_detection_fraud_detection_proto_rawDesc), len(file_utils_pb_fraud_detection_fraud_detection_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_utils_pb_fraud_detection_fraud_detection_proto_goTypes,
		DependencyIndexes: file_utils_pb_fraud_detection_fraud_detection_proto_depIdxs,
		MessageInfos:      file_utils_pb_fraud_detection_fraud_detection_proto_msgTypes,
	}.Build()
	File_utils_pb_fraud_detection_fraud_detection_proto = out.File
	file_utils_pb_fraud_detection_fraud_detection_proto_goTypes = nil
	file_utils_pb_fraud_detection_fraud_detection_proto_depIdxs = nil
}
