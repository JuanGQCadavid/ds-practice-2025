// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: fraud_detection/fraud_detection.proto

package fraud_detection

import (
	common "github.com/JuanGQCadavid/ds-practice-2025/utils/pb/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FraudDetectionRequestInit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	Order         *common.Order          `protobuf:"bytes,2,opt,name=order,proto3" json:"order,omitempty"` // FAIL
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FraudDetectionRequestInit) Reset() {
	*x = FraudDetectionRequestInit{}
	mi := &file_fraud_detection_fraud_detection_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FraudDetectionRequestInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FraudDetectionRequestInit) ProtoMessage() {}

func (x *FraudDetectionRequestInit) ProtoReflect() protoreflect.Message {
	mi := &file_fraud_detection_fraud_detection_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FraudDetectionRequestInit.ProtoReflect.Descriptor instead.
func (*FraudDetectionRequestInit) Descriptor() ([]byte, []int) {
	return file_fraud_detection_fraud_detection_proto_rawDescGZIP(), []int{0}
}

func (x *FraudDetectionRequestInit) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *FraudDetectionRequestInit) GetOrder() *common.Order {
	if x != nil {
		return x.Order
	}
	return nil
}

type FraudDetectionRequestClock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	Clock         []int32                `protobuf:"varint,2,rep,packed,name=clock,proto3" json:"clock,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FraudDetectionRequestClock) Reset() {
	*x = FraudDetectionRequestClock{}
	mi := &file_fraud_detection_fraud_detection_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FraudDetectionRequestClock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FraudDetectionRequestClock) ProtoMessage() {}

func (x *FraudDetectionRequestClock) ProtoReflect() protoreflect.Message {
	mi := &file_fraud_detection_fraud_detection_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FraudDetectionRequestClock.ProtoReflect.Descriptor instead.
func (*FraudDetectionRequestClock) Descriptor() ([]byte, []int) {
	return file_fraud_detection_fraud_detection_proto_rawDescGZIP(), []int{1}
}

func (x *FraudDetectionRequestClock) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *FraudDetectionRequestClock) GetClock() []int32 {
	if x != nil {
		return x.Clock
	}
	return nil
}

type FraudDetectionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FraudDetectionResponse) Reset() {
	*x = FraudDetectionResponse{}
	mi := &file_fraud_detection_fraud_detection_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FraudDetectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FraudDetectionResponse) ProtoMessage() {}

func (x *FraudDetectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fraud_detection_fraud_detection_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FraudDetectionResponse.ProtoReflect.Descriptor instead.
func (*FraudDetectionResponse) Descriptor() ([]byte, []int) {
	return file_fraud_detection_fraud_detection_proto_rawDescGZIP(), []int{2}
}

func (x *FraudDetectionResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type FraudDetectionResponseClock struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Response      *FraudDetectionResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Clock         []int32                 `protobuf:"varint,2,rep,packed,name=clock,proto3" json:"clock,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FraudDetectionResponseClock) Reset() {
	*x = FraudDetectionResponseClock{}
	mi := &file_fraud_detection_fraud_detection_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FraudDetectionResponseClock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FraudDetectionResponseClock) ProtoMessage() {}

func (x *FraudDetectionResponseClock) ProtoReflect() protoreflect.Message {
	mi := &file_fraud_detection_fraud_detection_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FraudDetectionResponseClock.ProtoReflect.Descriptor instead.
func (*FraudDetectionResponseClock) Descriptor() ([]byte, []int) {
	return file_fraud_detection_fraud_detection_proto_rawDescGZIP(), []int{3}
}

func (x *FraudDetectionResponseClock) GetResponse() *FraudDetectionResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *FraudDetectionResponseClock) GetClock() []int32 {
	if x != nil {
		return x.Clock
	}
	return nil
}

var File_fraud_detection_fraud_detection_proto protoreflect.FileDescriptor

var file_fraud_detection_fraud_detection_proto_rawDesc = string([]byte{
	0x0a, 0x25, 0x66, 0x72, 0x61, 0x75, 0x64, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x66, 0x72, 0x61, 0x75, 0x64, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x66, 0x72, 0x61, 0x75, 0x64, 0x1a, 0x13,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x5a, 0x0a, 0x19, 0x46, 0x72, 0x61, 0x75, 0x64, 0x44, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x69, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22,
	0x4c, 0x0a, 0x1a, 0x46, 0x72, 0x61, 0x75, 0x64, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x0a,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x2c, 0x0a,
	0x16, 0x46, 0x72, 0x61, 0x75, 0x64, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x6e, 0x0a, 0x1b, 0x46,
	0x72, 0x61, 0x75, 0x64, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x39, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66,
	0x72, 0x61, 0x75, 0x64, 0x2e, 0x46, 0x72, 0x61, 0x75, 0x64, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x32, 0xfd, 0x01, 0x0a, 0x15,
	0x46, 0x72, 0x61, 0x75, 0x64, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x69, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a,
	0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x66, 0x72, 0x61,
	0x75, 0x64, 0x2e, 0x46, 0x72, 0x61, 0x75, 0x64, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x1a, 0x22, 0x2e,
	0x66, 0x72, 0x61, 0x75, 0x64, 0x2e, 0x46, 0x72, 0x61, 0x75, 0x64, 0x44, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x58, 0x0a, 0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x12, 0x21, 0x2e, 0x66, 0x72, 0x61, 0x75, 0x64, 0x2e, 0x46, 0x72, 0x61,
	0x75, 0x64, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x1a, 0x22, 0x2e, 0x66, 0x72, 0x61, 0x75, 0x64, 0x2e,
	0x46, 0x72, 0x61, 0x75, 0x64, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x44, 0x5a, 0x42, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4a, 0x75, 0x61, 0x6e, 0x47, 0x51,
	0x43, 0x61, 0x64, 0x61, 0x76, 0x69, 0x64, 0x2f, 0x64, 0x73, 0x2d, 0x70, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x63, 0x65, 0x2d, 0x32, 0x30, 0x32, 0x35, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f, 0x70,
	0x62, 0x2f, 0x66, 0x72, 0x61, 0x75, 0x64, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_fraud_detection_fraud_detection_proto_rawDescOnce sync.Once
	file_fraud_detection_fraud_detection_proto_rawDescData []byte
)

func file_fraud_detection_fraud_detection_proto_rawDescGZIP() []byte {
	file_fraud_detection_fraud_detection_proto_rawDescOnce.Do(func() {
		file_fraud_detection_fraud_detection_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fraud_detection_fraud_detection_proto_rawDesc), len(file_fraud_detection_fraud_detection_proto_rawDesc)))
	})
	return file_fraud_detection_fraud_detection_proto_rawDescData
}

var file_fraud_detection_fraud_detection_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_fraud_detection_fraud_detection_proto_goTypes = []any{
	(*FraudDetectionRequestInit)(nil),   // 0: fraud.FraudDetectionRequestInit
	(*FraudDetectionRequestClock)(nil),  // 1: fraud.FraudDetectionRequestClock
	(*FraudDetectionResponse)(nil),      // 2: fraud.FraudDetectionResponse
	(*FraudDetectionResponseClock)(nil), // 3: fraud.FraudDetectionResponseClock
	(*common.Order)(nil),                // 4: common.Order
	(*common.InitRequest)(nil),          // 5: common.InitRequest
	(*common.InitResponse)(nil),         // 6: common.InitResponse
}
var file_fraud_detection_fraud_detection_proto_depIdxs = []int32{
	4, // 0: fraud.FraudDetectionRequestInit.order:type_name -> common.Order
	2, // 1: fraud.FraudDetectionResponseClock.response:type_name -> fraud.FraudDetectionResponse
	5, // 2: fraud.FraudDetectionService.initOrder:input_type -> common.InitRequest
	1, // 3: fraud.FraudDetectionService.checkUser:input_type -> fraud.FraudDetectionRequestClock
	1, // 4: fraud.FraudDetectionService.checkCreditCard:input_type -> fraud.FraudDetectionRequestClock
	6, // 5: fraud.FraudDetectionService.initOrder:output_type -> common.InitResponse
	3, // 6: fraud.FraudDetectionService.checkUser:output_type -> fraud.FraudDetectionResponseClock
	3, // 7: fraud.FraudDetectionService.checkCreditCard:output_type -> fraud.FraudDetectionResponseClock
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_fraud_detection_fraud_detection_proto_init() }
func file_fraud_detection_fraud_detection_proto_init() {
	if File_fraud_detection_fraud_detection_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fraud_detection_fraud_detection_proto_rawDesc), len(file_fraud_detection_fraud_detection_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fraud_detection_fraud_detection_proto_goTypes,
		DependencyIndexes: file_fraud_detection_fraud_detection_proto_depIdxs,
		MessageInfos:      file_fraud_detection_fraud_detection_proto_msgTypes,
	}.Build()
	File_fraud_detection_fraud_detection_proto = out.File
	file_fraud_detection_fraud_detection_proto_goTypes = nil
	file_fraud_detection_fraud_detection_proto_depIdxs = nil
}
